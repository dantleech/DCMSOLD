{% extends "DCMSMenuBundle:Menu:layout.html.twig" %}
{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="{{ asset('bundles/dcmsmenu/js/jquery.nestedSortable.js') }}"></script>
{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('bundles/dcmsmenu/js/jquery.nestedSortable.css') }}" />
    <style>
        .node_delete:hover {
            cursor: pointer;
        }

        .node_form {
            float: right;
        }

        .node_form li {
            float: left;
        }

        .node_form img {
            margin: 5px 0px 0px 10px;
        }

        .node_label {
            float: left;
            font-size: 18px;
        }

    </style>
{% endblock %}

{% block content %}
    <form action="{{ path('dcms_menu_menu_edit', {'menu_uuid': menu.uuid }) }}" method="POST">
        <div class="row">
            <div class="six columns">
                <h3 class="subheader">{{ menu.title }} </h3>
            </div>
            <div class="six columns text-right">
                <input id="update_button" type="submit" value="Update" class="button"/>
                <a id="delete_menu_button" href="{{ path('dcms_menu_menu_delete', {'menu_uuid': menu.uuid}) }}" class="button alert">Delete</a>
            </div>
        </div>

        <div class="row">
            <div class="large two columns">
                <h6>Create Item</h6>
            </div>
            <div class="ten columns">
                <ul class="button-group radius">
                    <li><a id="create_endpoint_button" class="button secondary radius" href="#">Endpoint</a></li>
                    <li><a class="button secondary radius disabled" href="#">Separator</a></li>
                    <li><a class="button secondary radius disabled" href="#">External link</a></li>
                </ul>
            </div>
        </div>
        <div class="row">
            <div class="twelve columns">
                <ul class="menu_node" id="tree"></ul>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var tree = {{ treeArray|json_encode|raw }};
        var serializableKeys = ['name', 'label', 'uri', 'content'];
        var epsForSelect = {{ epsForSelect|json_encode|raw }};

        $(document).ready(function () {
            $.each(tree.children, function (i, nodeObj) {
                build_tree(nodeObj, $('#tree'));
            });

            $('#create_endpoint_button').bind('click', function () {
                var nodeObj = {
                    label: 'New item'
                };
                var li = build_tree(nodeObj);
                $('#tree').prepend(li);
                return false;
            });

            $('#update_button').bind('click', function () {
                var node = {
                    children: []
                };
                $('#tree > li').each(function (i, el) {
                    var ret = serialize(el, node);
                    node.children.push(ret);
                });

                $('#tree').mask('{% trans %}Updating{% endtrans %}');

                $.ajax({
                    type: "post",
                    url: "{{ path('dcms_menu_menu_update', {'menu_uuid': menu.uuid}) }}",
                    data: {'menu': node},
                    success: function () {
                        $('#tree').unmask();
                    }
                });
                
                return false;
            });

            $('#tree').nestedSortable({
                handle: 'div',
                items: 'li.node',
                toleranceElement: '> div',
                listType: 'ul',
                placeholder: 'placeholder',
                forcePlaceholderSize: true
            });
        });

        function build_tree(nodeObj, ulEl) {
            var li = $('<li/>');
            li.addClass('node');
            $.each(nodeObj, function (key, value) {
                if ($.inArray(key, serializableKeys) > -1) {
                    li.attr('_' + key, value);
                }
            });
            var div = build_div(nodeObj, li);
            li.append(div);

            // only append if passed
            if (ulEl != undefined) {
                ulEl.append(li);
            }

            if (nodeObj.children != undefined) {
                var childUlEl = $('<ul/>');
                li.append(childUlEl);
                $.each(nodeObj.children, function (i, childObj) {
                    build_tree(childObj, childUlEl);
                });
            }

            return li;
        }

        function build_div(nodeObj, liEl) {
            var div = $('<div class="radius"/>');
            var nodeLabelEl = $('<div class="node_label"/>');
            var labelEl = $('<input type="text" value="' + nodeObj.label + '">');
            labelEl.bind('keyup', function () {
                $(this).closest('li.node').attr('_label', $(this).val());
            });
            nodeLabelEl.append(labelEl);
            div.append(nodeLabelEl);

            var form = $('<ul class="node_form"/>');

            // label

            var deleteField = $('<li class="node_field"/>');
            var deleteEl = $('<a class="node_delete"/>');
            deleteImg = $('<img/>');
            deleteImg.attr('src', '{{ asset('bundles/dcmsadmin/images/32/delete.png') }}');
            deleteEl.append(deleteImg);
            deleteEl.attr('title', 'Delete this item');
            deleteField.append(deleteEl);

            var endpointSelectField = $('<li class="node_field"/>');
            var endpointSelectEl = $('<select name="endpoint_id"/>');
            $.each(epsForSelect, function(id, name) {
                var epOption = $('<option>' + name + '</option>');
                epOption.val(id);
                if (nodeObj.content == id) {
                    epOption.prop('selected', 'selected');
                }
                endpointSelectEl.append(epOption);
            });
            endpointSelectField.append(endpointSelectEl);
            endpointSelectEl.bind('change', function () {
                $(this).closest('li.node').attr('_content', $(this).val());
            });

            form.append(endpointSelectField);
            form.append(deleteField);
            div.append(form);
            div.append('<div style="clear: both"></div>');

            deleteEl.bind('click', function () {
                $(this).closest('.node').detach();
                return false;
            });

            return div;
        }

        function serialize(el) {
            var node = {
                children: []
            };

            $.each(serializableKeys, function (i, key) {
                node[key] = $(el).attr(('_' + key));
            });

            $(el).find('> ul > li').each(function () {
                node.children.push(serialize($(this)));
            });

            return node;
        }
            </script>
    {% endblock %}

